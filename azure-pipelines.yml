# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- develop

pool:
  vmImage: ubuntu-latest

variables:
  - group: acrDetails
  - name: dockerRegistryServiceConnection
    value: 'ChuckDockerServiceConnection'
  - name: imageRepository
    value: 'chucknelson01/webgoat'
  - name: tag
    value: '$(Build.BuildId)'
  - name: resourceGroup
    value: 'VisualStudioOnline-0D37EC9620C44920A0A23DF0A250A806'
  - name: subscriptionConnection
    value: 'webGoatServiceConnection'
  - name: containerName
    value: 'webgoat'
  - name: containerDNS
    value: 'webgoat-cnelson'


stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build job
    steps:
    - script: |
        wget https://github.com/adoptium/temurin16-binaries/releases/download/jdk-16.0.2%2B7/OpenJDK16U-jdk_x64_linux_hotspot_16.0.2_7.tar.gz
        pwd
        ls -lRt
      displayName: 'Download jdk'
    - task: JavaToolInstaller@0
      inputs:
        versionSpec: '16'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'LocalDirectory'
        jdkFile: 'OpenJDK16U-jdk_x64_linux_hotspot_16.0.2_7.tar.gz'
        jdkDestinationDirectory: '/opt/jdkcustom'
        cleanDestinationDirectory: true
    - script: |
        java -version
        ls -lRt
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: false
        testResultsFiles: '**/TEST-*.xml'
        javaHomeOption: 'Path'
        jdkDirectory: '/opt/jdkcustom/JAVA_HOME_16_X64_OpenJDK16U-jdk_x64_linux_hotspot_16.0.2_7_tar.gz/jdk-16.0.2+7'
        mavenVersionOption: 'Default'
        mavenOptions: '-Xmx3072m'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
      
    - task: Docker@2
      inputs:
        command: 'buildAndPush'
        repository: $(imageRepository)
        Dockerfile: 'webgoat-server/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

          
      
- stage: DeployToDev
  displayName: Deploy to Dev stage
  jobs:
  - deployment: Deploy
    displayName: Deploy job
    environment: 'WebGoat-Dev'
    strategy:
      runOnce:
        deploy:
          steps:

            - task: AzureCLI@1
              displayName: Deploy to WebGoat container Dev ACI
              inputs:
                azureSubscription: $(subscriptionConnection)
                scriptLocation: 'inlineScript'
                inlineScript: 'az container create --resource-group $(resourceGroup) --name $(containerName) --image $(imageRepository):$(tag) --dns-name-label $(containerDNS) --ports 8080 --registry-username $(dockerUsername) --registry-password $(dockerPassword)'
